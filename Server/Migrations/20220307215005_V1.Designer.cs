// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Web.Migrations
{
    [DbContext(typeof(BolnicaContext))]
    [Migration("20220307215005_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Bolnica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DimenzijaX")
                        .HasColumnType("int");

                    b.Property<int>("DimenzijaY")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Bolnice");
                });

            modelBuilder.Entity("Models.KategorijaUsluga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kategorije");
                });

            modelBuilder.Entity("Models.Posao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DodatnoUputstvo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Izvrsena")
                        .HasColumnType("bit");

                    b.Property<int?>("SalaID")
                        .HasColumnType("int");

                    b.Property<int?>("VeterinarID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SalaID");

                    b.HasIndex("VeterinarID");

                    b.ToTable("Poslovi");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BolnicaID")
                        .HasColumnType("int");

                    b.Property<int>("BrojPacijenta")
                        .HasColumnType("int");

                    b.Property<int>("PozicijaX")
                        .HasColumnType("int");

                    b.Property<int>("PozicijaY")
                        .HasColumnType("int");

                    b.Property<bool>("Slobodana")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BolnicaID");

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Models.SpojPosaoUsluga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PosaoID")
                        .HasColumnType("int");

                    b.Property<int>("UslugaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PosaoID");

                    b.HasIndex("UslugaID");

                    b.ToTable("PosloviUsluge");
                });

            modelBuilder.Entity("Models.Usluga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ID");

                    b.HasIndex("KategorijaID");

                    b.ToTable("Usluge");
                });

            modelBuilder.Entity("Models.Veterinar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BolnicaID")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nadimak")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Plata")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("BolnicaID");

                    b.ToTable("Veterinari");
                });

            modelBuilder.Entity("Models.Posao", b =>
                {
                    b.HasOne("Models.Sala", "Sala")
                        .WithMany("PosaoSala")
                        .HasForeignKey("SalaID");

                    b.HasOne("Models.Veterinar", "Veterinar")
                        .WithMany("PosaoVeterinar")
                        .HasForeignKey("VeterinarID");

                    b.Navigation("Sala");

                    b.Navigation("Veterinar");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.HasOne("Models.Bolnica", "Bolnica")
                        .WithMany()
                        .HasForeignKey("BolnicaID");

                    b.Navigation("Bolnica");
                });

            modelBuilder.Entity("Models.SpojPosaoUsluga", b =>
                {
                    b.HasOne("Models.Posao", "Posao")
                        .WithMany("PosaoUsluga")
                        .HasForeignKey("PosaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Usluga", "Usluga")
                        .WithMany("PosaoUsluga")
                        .HasForeignKey("UslugaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Posao");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("Models.Usluga", b =>
                {
                    b.HasOne("Models.KategorijaUsluga", "Kategorija")
                        .WithMany("UslugaKategorija")
                        .HasForeignKey("KategorijaID");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("Models.Veterinar", b =>
                {
                    b.HasOne("Models.Bolnica", "Bolnica")
                        .WithMany()
                        .HasForeignKey("BolnicaID");

                    b.Navigation("Bolnica");
                });

            modelBuilder.Entity("Models.KategorijaUsluga", b =>
                {
                    b.Navigation("UslugaKategorija");
                });

            modelBuilder.Entity("Models.Posao", b =>
                {
                    b.Navigation("PosaoUsluga");
                });

            modelBuilder.Entity("Models.Sala", b =>
                {
                    b.Navigation("PosaoSala");
                });

            modelBuilder.Entity("Models.Usluga", b =>
                {
                    b.Navigation("PosaoUsluga");
                });

            modelBuilder.Entity("Models.Veterinar", b =>
                {
                    b.Navigation("PosaoVeterinar");
                });
#pragma warning restore 612, 618
        }
    }
}
